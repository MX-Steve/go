{"remainingRequest":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js!/data/vssh/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/data/vssh/frontend/src/components/HelloWorld.vue?vue&type=template&id=469af010","dependencies":[{"path":"/data/vssh/frontend/src/components/HelloWorld.vue","mtime":1642991041742},{"path":"/data/vssh/frontend/babel.config.js","mtime":1642990612224},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js","mtime":1642990597524},{"path":"/data/vssh/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1642990596737},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1642990595732}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLm1lc3NhZ2UgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkZGF0YS5tZXNzYWdlXV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnNlbmQgJiYgJG9wdGlvbnMuc2VuZC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgdmFsdWU6ICLlj5HpgIEiCiAgfSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJidXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jbG9zZV9zb2NrZXQgJiYgJG9wdGlvbnMuY2xvc2Vfc29ja2V0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICB2YWx1ZTogIuWFs+mXrSIKICB9KV0pXSk7Cn0="},{"version":3,"sources":["/data/vssh/frontend/src/components/HelloWorld.vue"],"names":[],"mappings":";;uBACE,mBAAA,CAIM,KAJN,EAIM,IAJN,EAIM,C,gBAHJ,mBAAA,CAAuC,OAAvC,EAAuC;AAAhC,IAAA,IAAI,EAAC,MAA2B;;aAAX,KAAA,CAAA,O,GAAO,M;;AAAI,GAAvC,E,IAAA,E;;AAAA,G,iBAA4B,KAAA,CAAA,O,GAGxB,EAFJ,mBAAA,CAAuD,GAAvD,EAAuD,IAAvD,EAAuD,CAApD,mBAAA,CAAgD,OAAhD,EAAgD;AAAzC,IAAA,IAAI,EAAC,QAAoC;AAA1B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,IAAA,IAAA,QAAA,CAAA,IAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAAqB;AAAb,IAAA,KAAK,EAAC;AAAO,GAAhD,CAAoD,CAAvD,CAEI,EADJ,mBAAA,CAA+D,GAA/D,EAA+D,IAA/D,EAA+D,CAA5D,mBAAA,CAAwD,OAAxD,EAAwD;AAAjD,IAAA,IAAI,EAAC,QAA4C;AAAlC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,YAAA,IAAA,QAAA,CAAA,YAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA6B;AAAb,IAAA,KAAK,EAAC;AAAO,GAAxD,CAA4D,CAA/D,CACI,CAJN,C","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"message\" />\n    <p><input type=\"button\" @click=\"send\" value=\"发送\" /></p>\n    <p><input type=\"button\" @click=\"close_socket\" value=\"关闭\" /></p>\n  </div>\n</template>\n\n<script>\nexport default {\n    name:'ws',\n    data() {\n        return {\n            message:'',\n            testsocket:''\n        }\n    },\n    methods:{\n        send(){\n           \n        //    send  发送信息\n        //    close 关闭连接\n\n           this.testsocket.send(this.message)\n           this.testsocket.onmessage = (res) => {\n            console.log(\"WS的返回结果\",res.data);\n          \n      }\n\n        },\n        close_socket(){\n            this.testsocket.close()\n        }\n\n    },\n    mounted(){\n        this.testsocket = new WebSocket(\"ws://127.0.0.1:8000/ws/\") \n\n\n        // onopen     定义打开时的函数\n        // onclose    定义关闭时的函数\n        // onmessage  定义接收数据时候的函数\n        this.testsocket.onopen = function(){\n            console.log(\"开始连接socket\")\n        },\n        this.testsocket.onclose = function(){\n            console.log(\"socket连接已经关闭\")\n        }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}