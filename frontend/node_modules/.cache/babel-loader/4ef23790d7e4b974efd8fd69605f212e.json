{"remainingRequest":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js!/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/data/vssh/frontend/src/components/HelloWorld2.vue?vue&type=script&lang=js","dependencies":[{"path":"/data/vssh/frontend/src/components/HelloWorld2.vue","mtime":1643007996908},{"path":"/data/vssh/frontend/babel.config.js","mtime":1642990612224},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js","mtime":1642990597524},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1642990595732}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvZGF0YS92c3NoL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAieHRlcm0vY3NzL3h0ZXJtLmNzcyI7CmltcG9ydCB7IFRlcm1pbmFsIH0gZnJvbSAieHRlcm0iOwppbXBvcnQgeyBGaXRBZGRvbiB9IGZyb20gInh0ZXJtLWFkZG9uLWZpdCI7CmltcG9ydCB7IEF0dGFjaEFkZG9uIH0gZnJvbSAieHRlcm0tYWRkb24tYXR0YWNoIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTU0giLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0ZXJtOiBudWxsLAogICAgICBzb2NrZXQ6IG51bGwsCiAgICAgIHJvd3M6IDE1MCwKICAgICAgY21kOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXRTb2NrZXQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vWHRlcm3kuLvpopgKICAgIGluaXRUZXJtOiBmdW5jdGlvbiBpbml0VGVybSgpIHsKICAgICAgdmFyIF9UZXJtaW5hbDsKCiAgICAgIHZhciB0ZXJtID0gbmV3IFRlcm1pbmFsKChfVGVybWluYWwgPSB7CiAgICAgICAgcmVuZGVyZXJUeXBlOiAiY2FudmFzIiwKICAgICAgICAvL+a4suafk+exu+WeiwogICAgICAgIHJvd3M6IHRoaXMucm93cywKICAgICAgICAvL+ihjOaVsAogICAgICAgIC8vIGNvbHM6IHRoaXMuY29scywvLyDorr7nva7kuYvlkI7kvJrovpPlhaXlpJrooYzkuYvlkI7opobnm5bnjrDosaEKICAgICAgICBjb252ZXJ0RW9sOiB0cnVlLAogICAgICAgIC8v5ZCv55So5pe277yM5YWJ5qCH5bCG6K6+572u5Li65LiL5LiA6KGM55qE5byA5aS0CiAgICAgICAgc2Nyb2xsYmFjazogMTAwLAogICAgICAgIC8v57uI56uv5Lit55qE5Zue5rua6YePCiAgICAgICAgZm9udFNpemU6IDE0LAogICAgICAgIC8v5a2X5L2T5aSn5bCPCiAgICAgICAgZGlzYWJsZVN0ZGluOiBmYWxzZSwKICAgICAgICAvL+aYr+WQpuW6lOemgeeUqOi+k+WFpeOAggogICAgICAgIGN1cnNvclN0eWxlOiAiYmxvY2siLAogICAgICAgIC8v5YWJ5qCH5qC35byPCiAgICAgICAgY3Vyc29yQmxpbms6IHRydWUKICAgICAgfSwgX2RlZmluZVByb3BlcnR5KF9UZXJtaW5hbCwgInNjcm9sbGJhY2siLCA1MCksIF9kZWZpbmVQcm9wZXJ0eShfVGVybWluYWwsICJ0YWJTdG9wV2lkdGgiLCA0KSwgX2RlZmluZVByb3BlcnR5KF9UZXJtaW5hbCwgInRoZW1lIiwgewogICAgICAgIGZvcmVncm91bmQ6ICJ5ZWxsb3ciLAogICAgICAgIC8v5a2X5L2TCiAgICAgICAgYmFja2dyb3VuZDogIiMwNjAxMDEiLAogICAgICAgIC8v6IOM5pmv6ImyCiAgICAgICAgY3Vyc29yOiAiaGVscCIgLy/orr7nva7lhYnmoIcKCiAgICAgIH0pLCBfVGVybWluYWwpKTsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHZhciBhdHRhY2hBZGRvbiA9IG5ldyBBdHRhY2hBZGRvbih0aGlzLnNvY2tldCk7CiAgICAgIHZhciBmaXRBZGRvbiA9IG5ldyBGaXRBZGRvbigpOwogICAgICB0ZXJtLmxvYWRBZGRvbihhdHRhY2hBZGRvbik7CiAgICAgIHRlcm0ubG9hZEFkZG9uKGZpdEFkZG9uKTsKICAgICAgdGVybS5vcGVuKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0ZXJtaW5hbCIpKTsKICAgICAgZml0QWRkb24uZml0KCk7CiAgICAgIHRlcm0uZm9jdXMoKTsKCiAgICAgIHZhciBfdGhpcyA9IHRoaXM7IC8v6ZmQ5Yi25ZKM5ZCO56uv5Lqk5LqS77yM5Y+q5pyJ6L6T5YWl5Zue6L2m6ZSu5omN5pi+56S657uT5p6cCgoKICAgICAgdGVybS5wcm9tcHQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdGVybS53cml0ZSgiXHJcbiIpOwogICAgICB9OwoKICAgICAgdGVybS5wcm9tcHQoKTsKCiAgICAgIGZ1bmN0aW9uIHJ1bkZha2VUZXJtaW5hbChfdGhpcykgewogICAgICAgIGlmICh0ZXJtLl9pbml0aWFsaXplZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8g5Yid5aeL5YyWCgoKICAgICAgICB0ZXJtLl9pbml0aWFsaXplZCA9IHRydWU7CiAgICAgICAgdGVybS53cml0ZWxuKCIkIFdlbGNvbWUgdG8gXHgxQlsxOzM7MzFtIG91ciAiICsgKF90aGlzLmluc3RhbmNlX25hbWUgPyBfdGhpcy5pbnN0YW5jZV9uYW1lICsgIiBpbnN0YW5jZSIgOiAiaW5zdGFuY2UiKSArICIgXHgxQlswbSBcciIpOwogICAgICAgIHRlcm0ud3JpdGUoIlxyJCAiKTsKICAgICAgICB0ZXJtLm9uRGF0YShmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhrZXkuY2hhckNvZGVBdCgpKTsgLy8g5LiK5LiL5bem5Y+z5pa55ZCR6ZSuOiAyNwoKICAgICAgICAgIGlmIChrZXkuY2hhckNvZGVBdCgpICE9IDI3KSB7CiAgICAgICAgICAgIGlmIChrZXkuY2hhckNvZGVBdCgpID09IDMpIHsKICAgICAgICAgICAgICB0ZXJtLndyaXRlKCJceDFiWzJLXHIiKTsKICAgICAgICAgICAgICB0ZXJtLndyaXRlKCIkICIpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRlcm0ud3JpdGUoa2V5KTsKICAgICAgICAgICAgICBfdGhpcy5jbWQgKz0ga2V5OwoKICAgICAgICAgICAgICBpZiAoa2V5ID09ICJcclxuIiB8fCBrZXkgPT0gIlxyIikgewogICAgICAgICAgICAgICAgdmFyIG9yZGVyID0gewogICAgICAgICAgICAgICAgICBEYXRhOiBrZXksCiAgICAgICAgICAgICAgICAgIE9wOiAic3RkaW4iCiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5jbWQuaW5kZXhPZigiY2xlYXIiKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgdGVybS5jbGVhcigpOwogICAgICAgICAgICAgICAgICBfdGhpcy5jbWQgPSAiIjsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLm9uU2VuZChvcmRlcik7CgogICAgICAgICAgICAgICAgICB0ZXJtLndyaXRlKCJcclxuIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0ZXJtLndyaXRlKCJceDFiWzJLXHIiKTsKICAgICAgICAgICAgdGVybS53cml0ZSgiJCAiKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBfdGhpcy50ZXJtID0gdGVybTsKICAgICAgfQoKICAgICAgcnVuRmFrZVRlcm1pbmFsKF90aGlzKTsKICAgIH0sCiAgICAvL3dlYlNoZWxs5Li76aKYCiAgICBpbml0U29ja2V0OiBmdW5jdGlvbiBpbml0U29ja2V0KCkgewogICAgICB0aGlzLnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vMTI3LjAuMC4xOjgwMDAvd2ViLyIpOwogICAgICB0aGlzLnNvY2tldE9uQ2xvc2UoKTsKICAgICAgdGhpcy5zb2NrZXRPbk9wZW4oKTsKICAgICAgdGhpcy5zb2NrZXRPbkVycm9yKCk7CiAgICB9LAogICAgLy93ZWJzaGVsbOmTvuaOpeaIkOWKn+S5i+WQjuaTjeS9nAogICAgc29ja2V0T25PcGVuOiBmdW5jdGlvbiBzb2NrZXRPbk9wZW4oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5zb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKCkgewogICAgICAgIC8vIOmTvuaOpeaIkOWKn+WQjgogICAgICAgIGNvbnNvbGUubG9nKCJzb2NrZXQg6L+e5o6l5oiQ5YqfIik7CgogICAgICAgIF90aGlzMi5pbml0VGVybSgpOwogICAgICB9OwogICAgfSwKICAgIC8vd2Vic2hlbGzlhbPpl63kuYvlkI7mk43kvZwKICAgIHNvY2tldE9uQ2xvc2U6IGZ1bmN0aW9uIHNvY2tldE9uQ2xvc2UoKSB7CiAgICAgIHRoaXMuc29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coImNsb3NlIHNvY2tldCIpOwogICAgICB9OwogICAgfSwKICAgIC8vd2Vic2hlbGzplJnor6/kv6Hmga8KICAgIHNvY2tldE9uRXJyb3I6IGZ1bmN0aW9uIHNvY2tldE9uRXJyb3IoKSB7CiAgICAgIHRoaXMuc29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coInNvY2tldCDpk77mjqXlpLHotKUiKTsKICAgICAgfTsKICAgIH0sCiAgICAvL+eJueauiuWkhOeQhgogICAgb25TZW5kOiBmdW5jdGlvbiBvblNlbmQoZGF0YSkgewogICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICB9LAogICAgLy/liKDpmaTlt6blj7PkuKTnq6/nmoTnqbrmoLwKICAgIHRyaW06IGZ1bmN0aW9uIHRyaW0oc3RyKSB7CiAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIik7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5zb2NrZXQuY2xvc2UoKTsKICB9Cn07"},{"version":3,"sources":["/data/vssh/frontend/src/components/HelloWorld2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div\n      class=\"console\"\n      id=\"terminal\"\n      v-loading=\"loading\"\n      element-loading-text=\"拼命连接中\"\n    ></div>\n  </div>\n</template>\n<script>\nimport \"xterm/css/xterm.css\";\nimport { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport { AttachAddon } from \"xterm-addon-attach\";\n\nexport default {\n  name: \"SSH\",\n  data() {\n    return {\n      loading: true,\n      term: null,\n      socket: null,\n      rows: 150,\n      cmd: \"\",\n    };\n  },\n  mounted() {\n    this.initSocket();\n  },\n  methods: {\n    //Xterm主题\n    initTerm() {\n      const term = new Terminal({\n        rendererType: \"canvas\", //渲染类型\n        rows: this.rows, //行数\n        // cols: this.cols,// 设置之后会输入多行之后覆盖现象\n        convertEol: true, //启用时，光标将设置为下一行的开头\n        scrollback: 100, //终端中的回滚量\n        fontSize: 14, //字体大小\n        disableStdin: false, //是否应禁用输入。\n        cursorStyle: \"block\", //光标样式\n        cursorBlink: true, //光标闪烁\n        scrollback: 50,\n        tabStopWidth: 4,\n        theme: {\n          foreground: \"yellow\", //字体\n          background: \"#060101\", //背景色\n          cursor: \"help\", //设置光标\n        },\n      });\n      this.loading = false;\n      const attachAddon = new AttachAddon(this.socket);\n      const fitAddon = new FitAddon();\n      term.loadAddon(attachAddon);\n      term.loadAddon(fitAddon);\n      term.open(document.getElementById(\"terminal\"));\n      fitAddon.fit();\n      term.focus();\n      let _this = this;\n      //限制和后端交互，只有输入回车键才显示结果\n      term.prompt = () => {\n        term.write(\"\\r\\n\");\n      };\n      term.prompt();\n      function runFakeTerminal(_this) {\n        if (term._initialized) {\n          return;\n        }\n        // 初始化\n        term._initialized = true;\n        term.writeln(\n          \"$ Welcome to \\x1B[1;3;31m our \" +\n            (_this.instance_name\n              ? _this.instance_name + \" instance\"\n              : \"instance\") +\n            \" \\x1B[0m \\r\"\n        );\n        term.write(\"\\r$ \");\n        term.onData(function (key) {\n          console.log(key.charCodeAt());\n          // 上下左右方向键: 27\n          if (key.charCodeAt() != 27) {\n            if (key.charCodeAt() == 3) {\n              term.write(\"\\x1b[2K\\r\");\n              term.write(\"$ \");\n            } else {\n              term.write(key);\n              _this.cmd += key;\n              if (key == \"\\r\\n\" || key == \"\\r\") {\n                let order = {\n                  Data: key,\n                  Op: \"stdin\",\n                };\n\n                if (_this.cmd.indexOf(\"clear\") !== -1) {\n                  term.clear();\n                  _this.cmd = \"\"\n                } else {\n                  _this.onSend(order);\n                  term.write(\"\\r\\n\");\n                }\n              }\n            }\n          } else {\n            term.write(\"\\x1b[2K\\r\");\n            term.write(\"$ \");\n          }\n        });\n        _this.term = term;\n      }\n      runFakeTerminal(_this);\n    },\n    //webShell主题\n    initSocket() {\n      this.socket = new WebSocket(\"ws://127.0.0.1:8000/web/\");\n      this.socketOnClose();\n      this.socketOnOpen();\n      this.socketOnError();\n    },\n    //webshell链接成功之后操作\n    socketOnOpen() {\n      this.socket.onopen = () => {\n        // 链接成功后\n        console.log(\"socket 连接成功\");\n        this.initTerm();\n      };\n    },\n    //webshell关闭之后操作\n    socketOnClose() {\n      this.socket.onclose = () => {\n        console.log(\"close socket\");\n      };\n    },\n    //webshell错误信息\n    socketOnError() {\n      this.socket.onerror = () => {\n        console.log(\"socket 链接失败\");\n      };\n    },\n    //特殊处理\n    onSend(data) {\n      data = JSON.stringify(data);\n    },\n    //删除左右两端的空格\n    trim(str) {\n      return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    },\n  },\n  beforeDestroy() {\n    this.socket.close();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#terminal {\n  width: 100%;\n  height: 650px;\n}\n</style>"],"sourceRoot":""}]}