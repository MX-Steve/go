{"remainingRequest":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js!/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/data/vssh/frontend/src/components/HelloWorld.vue?vue&type=script&lang=js","dependencies":[{"path":"/data/vssh/frontend/src/components/HelloWorld.vue","mtime":1643007267830},{"path":"/data/vssh/frontend/babel.config.js","mtime":1642990612224},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/babel-loader/lib/index.js","mtime":1642990597524},{"path":"/data/vssh/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1642990596778},{"path":"/data/vssh/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1642990595732}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL2RhdGEvdnNzaC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgeyBUZXJtaW5hbCB9IGZyb20gInh0ZXJtIjsKaW1wb3J0ICogYXMgYXR0YWNoIGZyb20gInh0ZXJtL2xpYi9hZGRvbnMvYXR0YWNoL2F0dGFjaCI7CmltcG9ydCAqIGFzIGZpdCBmcm9tICJ4dGVybS9saWIvYWRkb25zL2ZpdC9maXQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIndlYnNzaCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRlcm06IG51bGwsCiAgICAgIHRlcm1pbmFsU29ja2V0OiBudWxsLAogICAgICBvcmRlcjogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAvL+WunuS+i+WMluS4gOS4qndlYnNvY2tldO+8jOeUqOS6juWSjGRqYW5nb+axn+a5lgogICAgdGhpcy50ZXJtaW5hbFNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vMTI3LjAuMC4xOjgwMDAvd2ViLyIpOyAvL+iOt+WPluWIsOWQjuerr+S8oOWbnueahOS/oeaBrwoKICAgIHRoaXMudGVybWluYWxTb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24gKHJlcykgewogICAgICB2YXIgcmVhZGVyID0gbmV3IHdpbmRvdy5GaWxlUmVhZGVyKCk7CgogICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy50ZXJtLndyaXRlKHJlYWRlci5yZXN1bHQpOwogICAgICB9OwoKICAgICAgcmVhZGVyLnJlYWRBc1RleHQocmVzLmRhdGEsICJ1dGYtOCIpOwogICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7IC8vIHZhciBtZXNzYWdlID0gSlNPTi5wYXJzZShyZXMuZGF0YSk7CiAgICAgIC8v5bCG5Lyg5Zue5p2l55qE5pWw5o2u5pi+56S65ZyoeHRlcm3ph4wKICAgICAgLy8gdGhpcy50ZXJtLndyaXRlbG4oIlxyXG4iICsgcmVzLmRhdGEpOwogICAgICAvL+mHjee9ruimgeWPkemAgeeahOS/oeaBrwoKICAgICAgX3RoaXMub3JkZXIgPSAiIjsgLy/mjaLooYzvvIzmmL7npLrkuIvkuIDkuKrlvIDlpLQKICAgICAgLy8gdGhpcy50ZXJtLndyaXRlKCJcclxuJCAiKTsKICAgIH07IC8vd3Pov57mjqXnmoTml7blgJkKICAgIC8vIHRoaXMudGVybWluYWxTb2NrZXQub25vcGVuID0gZnVuY3Rpb24oKXsKICAgIC8vICAgICBjb25zb2xlLmxvZygnd2Vic29ja2V0IGlzIENvbm5lY3RlZC4uLicpCiAgICAvLyB9CiAgICAvL3dz5YWz6Zet55qE5pe25YCZCiAgICAvLyB0aGlzLnRlcm1pbmFsU29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbigpewogICAgLy8gICAgIGNvbnNvbGUubG9nKCd3ZWJzb2NrZXQgaXMgQ2xvc2VkLi4uJykKICAgIC8vIH0KICAgIC8vd3PplJnor6/nmoTml7blgJkKICAgIC8vIHRoaXMudGVybWluYWxTb2NrZXQub25lcnJvciA9IGZ1bmN0aW9uKCl7CiAgICAvLyAgICAgY29uc29sZS5sb2coJ2RhbW4gV2Vic29ja2V0IGlzIGJyb2tlbiEnKQogICAgLy8gfQogICAgLy8gdGhpcy50ZXJtLmF0dGFjaCh0aGlzLnRlcm1pbmFsU29ja2V0KQogICAgLy8g57uR5a6aeHRlcm3liLB3c+a1geS4rSB9LAoKCiAgICB2YXIgdGVybWluYWxDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVybWluYWwiKTsgLy/liJvlu7p4dGVybeWunuS+iwoKICAgIHRoaXMudGVybSA9IG5ldyBUZXJtaW5hbCh7CiAgICAgIHJlbmRlcmVyVHlwZTogImNhbnZhcyIsCiAgICAgIGNvbnZlcnRFb2w6IHRydWUsCiAgICAgIHNjcm9sbGJhY2s6IDEwMCwKICAgICAgZm9udFNpemU6IDE0LAogICAgICBkaXNhYmxlU3RkaW46IGZhbHNlLAogICAgICBjdXJzb3JTdHlsZTogImJsb2NrIiwKICAgICAgY3Vyc29yQmxpbms6IHRydWUsCiAgICAgIC8vIOaYvuekuuWFieaghwogICAgICB0YWJTdG9wV2lkdGg6IDQsCiAgICAgIHRoZW1lOiB7CiAgICAgICAgZm9yZWdyb3VuZDogInllbGxvdyIsCiAgICAgICAgYmFja2dyb3VuZDogIiMwNjAxMDEiLAogICAgICAgIGN1cnNvcjogImhlbHAiCiAgICAgIH0KICAgIH0pOyAvLyDliJvlu7rkuIDkuKrmlrDnmoRUZXJtaW5hbOWvueixoQoKICAgIHRoaXMudGVybS5vcGVuKHRlcm1pbmFsQ29udGFpbmVyKTsgLy8g5bCGdGVybeaMgui9veWIsGRvbeiKgueCueS4igogICAgLy/lnKh4dGVybeS4iuaYvuekuuWRveS7pOihjOaPkOekugoKICAgIHRoaXMudGVybS53cml0ZSgiJCAiKTsgLy/nm5HlkKx4dGVybeeahOmUruebmOS6i+S7tgoKICAgIHRoaXMudGVybS5vbigia2V5IiwgZnVuY3Rpb24gKGtleSwgZXYpIHsKICAgICAgLy8ga2V55piv6L6T5YWl55qE5a2X56ymIGV25piv6ZSu55uY5oyJ6ZSu5LqL5Lu2CiAgICAgIGNvbnNvbGUubG9nKCJrZXk9PT09PT09PT09IiwgZXYua2V5Q29kZSk7CgogICAgICBfdGhpcy50ZXJtLndyaXRlKGtleSk7IC8vIOWwhui+k+WFpeeahOWtl+espuaJk+WNsOWIsOm7keadv+S4rQoKCiAgICAgIGlmIChldi5rZXlDb2RlID09IDEzKSB7CiAgICAgICAgLy8g6L6T5YWl5Zue6L2mCiAgICAgICAgLy8gY29uc29sZS5sb2coIui+k+WFpeWbnui9piIpCiAgICAgICAgLy8gdGhpcy50ZXJtLndyaXRlKCckICcpCiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5vcmRlcikKICAgICAgICAvL+S9v+eUqHdlYnNjb2tldOWwhuaVsOaNruWPkemAgeWIsGRqYW5nbwogICAgICAgIHZhciBkYXRhID0gX3RoaXMub3JkZXI7CgogICAgICAgIF90aGlzLnRlcm1pbmFsU29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgZGF0YTogZGF0YQogICAgICAgIH0pKTsgLy8gdGhpcy5vcmRlcj0nJwoKCiAgICAgICAgY29uc29sZS5sb2coIumHjOmdoueahG9yZGVyIiwgX3RoaXMub3JkZXIpOwogICAgICB9IGVsc2UgaWYgKGV2LmtleUNvZGUgPT0gOCkgewogICAgICAgIC8v5Yig6Zmk5oyJ6ZKuCiAgICAgICAgLy/miKrlj5blrZfnrKbkuLJbMCxsZW50aC0xXQogICAgICAgIF90aGlzLm9yZGVyID0gX3RoaXMub3JkZXIuc3Vic3RyKDAsIF90aGlzLm9yZGVyLmxlbmd0aCAtIDEpOyAvL+a4heepuuW9k+WJjeS4gOadoeeahOWRveS7pAoKICAgICAgICBfdGhpcy50ZXJtLndyaXRlKCJceDFiWzJLXHIiKTsgLy/nroDljJblvZPliY3nmoTmlrDnmoTlkb3ku6TmmL7npLrkuIoKCgogICAgICAgIF90aGlzLnRlcm0ud3JpdGUoIiQgIiArIF90aGlzLm9yZGVyKTsKCiAgICAgICAgY29uc29sZS5sb2coIuaIquWPlueahOWtl+espuS4siIgKyBfdGhpcy5vcmRlcik7CgogICAgICAgIF90eXBlb2YoX3RoaXMub3JkZXIpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOWwhuavj+asoei+k+WFpeeahOWtl+espuaLvOWHkei1t+adpQogICAgICAgIF90aGlzLm9yZGVyICs9IGtleTsKICAgICAgICBjb25zb2xlLmxvZygi5aSW6Z2i55qEb3JkZXIiLCBfdGhpcy5vcmRlcik7CiAgICAgIH0KICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/data/vssh/frontend/src/components/HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"console\" id=\"terminal\"></div>\n</template>\n<script>\nimport { Terminal } from \"xterm\";\nimport * as attach from \"xterm/lib/addons/attach/attach\";\nimport * as fit from \"xterm/lib/addons/fit/fit\";\nexport default {\n  name: \"webssh\",\n  data() {\n    return {\n      term: null,\n      terminalSocket: null,\n      order: \"\",\n    };\n  },\n  methods: {},\n  mounted() {\n    //实例化一个websocket，用于和django江湖\n    this.terminalSocket = new WebSocket(\"ws://127.0.0.1:8000/web/\");\n    //获取到后端传回的信息\n    this.terminalSocket.onmessage = (res) => {\n      const reader = new window.FileReader();\n      reader.onload = () => this.term.write(reader.result);\n      reader.readAsText(res.data, \"utf-8\");\n      console.log(res.data);\n      // var message = JSON.parse(res.data);\n      //将传回来的数据显示在xterm里\n      // this.term.writeln(\"\\r\\n\" + res.data);\n      //重置要发送的信息\n      this.order = \"\";\n      //换行，显示下一个开头\n      // this.term.write(\"\\r\\n$ \");\n    };\n    //ws连接的时候\n    // this.terminalSocket.onopen = function(){\n    //     console.log('websocket is Connected...')\n    // }\n    //ws关闭的时候\n    // this.terminalSocket.onclose = function(){\n    //     console.log('websocket is Closed...')\n    // }\n    //ws错误的时候\n    // this.terminalSocket.onerror = function(){\n    //     console.log('damn Websocket is broken!')\n    // }\n    // this.term.attach(this.terminalSocket)\n    // 绑定xterm到ws流中 },\n\n    let terminalContainer = document.getElementById(\"terminal\");\n    //创建xterm实例\n    this.term = new Terminal({\n      rendererType: \"canvas\",\n      convertEol: true,\n      scrollback: 100,\n      fontSize: 14,\n      disableStdin: false,\n      cursorStyle: \"block\",\n      cursorBlink: true, // 显示光标\n      tabStopWidth: 4,\n      theme: {\n        foreground: \"yellow\",\n        background: \"#060101\",\n        cursor: \"help\",\n      },\n    }); // 创建一个新的Terminal对象\n\n    this.term.open(terminalContainer); // 将term挂载到dom节点上\n\n    //在xterm上显示命令行提示\n    this.term.write(\"$ \");\n    //监听xterm的键盘事件\n    this.term.on(\"key\", (key, ev) => {\n      // key是输入的字符 ev是键盘按键事件\n      console.log(\"key==========\", ev.keyCode);\n      this.term.write(key); // 将输入的字符打印到黑板中\n      if (ev.keyCode == 13) {\n        // 输入回车\n        // console.log(\"输入回车\")\n        // this.term.write('$ ')\n        // console.log(this.order)\n\n        //使用webscoket将数据发送到django\n        const data = this.order;\n        this.terminalSocket.send(JSON.stringify({ data }));\n        // this.order=''\n        console.log(\"里面的order\", this.order);\n      } else if (ev.keyCode == 8) {\n        //删除按钮\n        //截取字符串[0,lenth-1]\n        this.order = this.order.substr(0, this.order.length - 1);\n\n        //清空当前一条的命令\n        this.term.write(\"\\x1b[2K\\r\");\n        //简化当前的新的命令显示上\n        this.term.write(\"$ \" + this.order);\n\n        console.log(\"截取的字符串\" + this.order);\n        typeof this.order;\n      } else {\n        // 将每次输入的字符拼凑起来\n        this.order += key;\n        console.log(\"外面的order\", this.order);\n      }\n    });\n  },\n};\n</script>"],"sourceRoot":""}]}