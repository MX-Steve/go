apiVersion: v1
data:
  release: 
kind: Secret
metadata:
  creationTimestamp: "2020-04-12T00:26:41Z"
  labels:
    modifiedAt: "1586651201"
    name: aws-alb-ingress-controller
    owner: helm
    status: deployed
    version: "2"
  name: sh.helm.release.v1.aws-alb-ingress-controller.v2
  namespace: kube-system
  resourceVersion: "55797227"
  selfLink: /api/v1/namespaces/kube-system/secrets/sh.helm.release.v1.aws-alb-ingress-controller.v2
  uid: 74036ecf-3fce-4682-a858-81a34c4caf6e
type: helm.sh/release.v1
