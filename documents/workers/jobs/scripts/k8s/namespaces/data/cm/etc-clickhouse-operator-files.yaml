apiVersion: v1
data:
  config.yaml: |
    ################################################
    ##
    ## Watch Namespaces Section
    ##
    ################################################

    # List of namespaces where clickhouse-operator watches for events.
    # Concurrently running operators should watch on different namespaces
    #watchNamespaces:
    #  - dev
    #  - test
    #  - info
    #  - onemore

    ################################################
    ##
    ## Additional Configuration Files Section
    ##
    ################################################

    # Path to folder where ClickHouse configuration files common for all instances within CHI are located.
    chCommonConfigsPath: config.d

    # Path to folder where ClickHouse configuration files unique for each instance (host) within CHI are located.
    chHostConfigsPath: conf.d

    # Path to folder where ClickHouse configuration files with users settings are located.
    # Files are common for all instances within CHI
    chUsersConfigsPath: users.d

    # Path to folder where ClickHouseInstallation .yaml manifests are located.
    # Manifests are applied in sorted alpha-numeric order
    chiTemplatesPath: templates.d

    ################################################
    ##
    ## Cluster Create/Update/Delete Objects Section
    ##
    ################################################

    # How many seconds to wait for created/updated StatefulSet to be Ready
    statefulSetUpdateTimeout: 300

    # How many seconds to wait between checks for created/updated StatefulSet status
    statefulSetUpdatePollPeriod: 5

    # What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
    # Possible options:
    # 1. abort - do nothing, just break the process and wait for admin
    # 2. delete - delete newly created problematic StatefulSet
    # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
    onStatefulSetCreateFailureAction: ignore

    # What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
    # Possible options:
    # 1. abort - do nothing, just break the process and wait for admin
    # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
    # Pod would be recreated by StatefulSet based on rollback-ed configuration
    # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
    onStatefulSetUpdateFailureAction: rollback

    ################################################
    ##
    ## ClickHouse Settings Section
    ##
    ################################################

    # Default values for ClickHouse user configuration
    # 1. user/profile - string
    # 2. user/quota - string
    # 3. user/networks/ip - multiple strings
    # 4. user/password - string
    chConfigUserDefaultProfile: default
    chConfigUserDefaultQuota: default
    chConfigUserDefaultNetworksIP:
      - "::1"
      - "127.0.0.1"
    chConfigUserDefaultPassword: "default"

    # Default host_regexp to limit network connectivity from outside
    chConfigNetworksHostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"

    ################################################
    ##
    ## Access to ClickHouse instances
    ##
    ################################################

    # ClickHouse credentials (username, password and port) to be used by operator to connect to ClickHouse instances for:
    # 1. Metrics requests
    # 2. Schema maintenance
    # 3. DROP DNS CACHE
    # User with such credentials can be specified in additional ClickHouse .xml config files,
    # located in `chUsersConfigsPath` folder
    chUsername: clickhouse_operator
    chPassword: clickhouse_operator_password
    chPort: 8123

    ################################################
    ##
    ## Log parameters
    ##
    ################################################

    logtostderr: "true"
    alsologtostderr: "false"
    v: "1"
    stderrthreshold: ""
    vmodule: ""
    log_backtrace_at: ""

    ################################################
    ##
    ## Runtime parameters
    ##
    ################################################

    # Max number of concurrent reconciles in progress
    reconcileThreadsNumber: 10
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.yaml":"################################################\n##\n## Watch Namespaces Section\n##\n################################################\n\n# List of namespaces where clickhouse-operator watches for events.\n# Concurrently running operators should watch on different namespaces\n#watchNamespaces:\n#  - dev\n#  - test\n#  - info\n#  - onemore\n\n################################################\n##\n## Additional Configuration Files Section\n##\n################################################\n\n# Path to folder where ClickHouse configuration files common for all instances within CHI are located.\nchCommonConfigsPath: config.d\n\n# Path to folder where ClickHouse configuration files unique for each instance (host) within CHI are located.\nchHostConfigsPath: conf.d\n\n# Path to folder where ClickHouse configuration files with users settings are located.\n# Files are common for all instances within CHI\nchUsersConfigsPath: users.d\n\n# Path to folder where ClickHouseInstallation .yaml manifests are located.\n# Manifests are applied in sorted alpha-numeric order\nchiTemplatesPath: templates.d\n\n################################################\n##\n## Cluster Create/Update/Delete Objects Section\n##\n################################################\n\n# How many seconds to wait for created/updated StatefulSet to be Ready\nstatefulSetUpdateTimeout: 300\n\n# How many seconds to wait between checks for created/updated StatefulSet status\nstatefulSetUpdatePollPeriod: 5\n\n# What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds\n# Possible options:\n# 1. abort - do nothing, just break the process and wait for admin\n# 2. delete - delete newly created problematic StatefulSet\n# 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet\nonStatefulSetCreateFailureAction: ignore\n\n# What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds\n# Possible options:\n# 1. abort - do nothing, just break the process and wait for admin\n# 2. rollback - delete Pod and rollback StatefulSet to previous Generation.\n# Pod would be recreated by StatefulSet based on rollback-ed configuration\n# 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet\nonStatefulSetUpdateFailureAction: rollback\n\n################################################\n##\n## ClickHouse Settings Section\n##\n################################################\n\n# Default values for ClickHouse user configuration\n# 1. user/profile - string\n# 2. user/quota - string\n# 3. user/networks/ip - multiple strings\n# 4. user/password - string\nchConfigUserDefaultProfile: default\nchConfigUserDefaultQuota: default\nchConfigUserDefaultNetworksIP:\n  - \"::1\"\n  - \"127.0.0.1\"\nchConfigUserDefaultPassword: \"default\"\n\n# Default host_regexp to limit network connectivity from outside\nchConfigNetworksHostRegexpTemplate: \"(chi-{chi}-[^.]+\\\\d+-\\\\d+|clickhouse\\\\-{chi})\\\\.{namespace}\\\\.svc\\\\.cluster\\\\.local$\"\n\n################################################\n##\n## Access to ClickHouse instances\n##\n################################################\n\n# ClickHouse credentials (username, password and port) to be used by operator to connect to ClickHouse instances for:\n# 1. Metrics requests\n# 2. Schema maintenance\n# 3. DROP DNS CACHE\n# User with such credentials can be specified in additional ClickHouse .xml config files,\n# located in `chUsersConfigsPath` folder\nchUsername: clickhouse_operator\nchPassword: clickhouse_operator_password\nchPort: 8123\n\n################################################\n##\n## Log parameters\n##\n################################################\n\nlogtostderr: \"true\"\nalsologtostderr: \"false\"\nv: \"1\"\nstderrthreshold: \"\"\nvmodule: \"\"\nlog_backtrace_at: \"\"\n\n################################################\n##\n## Runtime parameters\n##\n################################################\n\n# Max number of concurrent reconciles in progress\nreconcileThreadsNumber: 10\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"clickhouse-operator"},"name":"etc-clickhouse-operator-files","namespace":"data"}}
  creationTimestamp: "2020-07-30T08:15:34Z"
  labels:
    app: clickhouse-operator
  name: etc-clickhouse-operator-files
  namespace: data
  resourceVersion: "86125376"
  selfLink: /api/v1/namespaces/data/configmaps/etc-clickhouse-operator-files
  uid: 5ee5f0a0-fdef-4378-823e-83015b1d86e4
