## 1. 防止DDOS
1. 类型
    - 网络层攻击
        - NTP Flood
    - 传输层攻击
        - SYN Flood
    - 会话层攻击
        - ssl
    - 应用层攻击
        - DNS Flood, HTTP Flood
2. 防护
    - 定期检查服务器漏洞[系统级别，应用服务级别]
    - 隐藏服务器真实ip[CDN代理/免费(百度云、七牛)/收费]
    - 关闭不必要的服务或端口
    - 业务托管多家DNS运营商
    - 服务安全加固
        - 弹性伸缩等
    - 硬件防火墙 WAF
    - 购买余量带宽
## 2. sql注入
1. 原因
    - 直接操作sql语句，未对参数做校验
2. 操作
    - 前后端都对参数做校验
    - 多使用 orm ，少直接操作 sql
    - 多用 ? 占位符，少用 %s | $ 之类 
## 3. 冒泡排序
```
def bubbleSort(arr):
  if arr is None:
    return None
  n = len(arr)
  for i in range(n):
    for j in range(0,n-i-1):
      if arr[j] > arr[j+1]:
        arr[j], arr[j+1] = arr[j+1], arr[j]
```
## 4. 前端 xss 攻击
1. 处理
    - 在不同的情况下采用不同的转义规则，尽量不要使用自己写的转义规则，应当采用成熟的、业界通用的转义库
## 5. CICD
1. CI 持续集成
    - gitlab -> SonarQube 代码质量校验 -> build 代码构建 -> dockerhub|harbor/制品库
2. CD 持续交付
    - 拉取制品包 -> 流量拉出 -> 部署 -> 结果校验[服务日志等] -> 拉入 -> 校验
    - 配置中心[apollo]
        - 可以根据环境、项目、服务区分配置
    - 制品库[harbor]
        - 存储成品包
## 6. 发布类型
1. 蓝绿发布
    - 两套环境，绿色环境为线上环境，蓝色环境为新版本环境
2. 滚动发布
    - 一台台更新到新版本
3. 灰度发布
    - 金丝雀发布
    - 大部分用A，一小部分用户用B，如果B有问题，则切换回A，没有问题，则都切换成B
## 7. 如何分流
1. 进入网关 -> nginx
2. nginx-lua + ABTestingGateway
    - 工作在 7 层，基于 nginx 和 ngx-lua 开发
    - redis 作为分流策略数据库，可以实现动态调度功能
    - ABTestingGateway 是在 nginx 转发的框架内，在转向 upstream 前，根据 用户请求特征 和 系统的分流策略 ，查找出目标 upstream，进而实现分流。


    